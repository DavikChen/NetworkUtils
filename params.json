{"name":"NetworkUtils","tagline":"An utility library for various network operations on Android","body":"#NetworkUtils\r\nAn Android Library for common network operations with a fluent and easy to use API.\r\n\r\nSimple, fast and thread safe library that extends the existing Android Network-API and adds more features to it. \r\n\r\n---\r\n\r\n##Table of Contents\r\n1. [Gradle Dependency](https://github.com/PDDStudio/NetworkUtils#gradle-dependency)\r\n\t1. [Repository](https://github.com/PDDStudio/NetworkUtils#repository)\r\n\t2. [Dependency](https://github.com/PDDStudio/NetworkUtils#dependency)\r\n2. [Library Features Overview](https://github.com/PDDStudio/NetworkUtils#library-features-overview)\r\n\t1. [General Overview](https://github.com/PDDStudio/NetworkUtils#general-overview)\r\n\t2. [NetworkUtils Javadoc](https://github.com/PDDStudio/NetworkUtils#networkutils-javadoc)\r\n3. [Installation](https://github.com/PDDStudio/NetworkUtils#installation)\r\n4. [Synchroneous Calls](https://github.com/PDDStudio/NetworkUtils#synchronous-operations)\r\n5. [Asynchroneous Calls](https://github.com/PDDStudio/NetworkUtils#asynchronous-operations)\r\n6. ToDo List\r\n7. About & Contact\r\n8. License\r\n\r\n---\r\n\r\n## Gradle Dependency\r\n[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?style=flat-square)](https://www.apache.org/licenses/LICENSE-2.0.html)\r\n\r\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.pddstudio/networkutils/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.pddstudio/networkutils)\r\n\r\n[![Minimum SDK](https://img.shields.io/badge/Min.%20SDK-16-blue.svg)](https://github.com/PDDStudio/NetworkUtils)\r\n\r\n[![GitHub issues](https://img.shields.io/github/issues/PDDStudio/NetworkUtils.svg)](https://github.com/PDDStudio/NetworkUtils/issues)\r\n\r\n#### Repository\r\nNetworkUtils is a Free and OpenSource Android Library which can be found on [GitHub](https://github.com/PDDStudio/NetworkUtils).\r\n\r\nThe binary packages of this library are published on [Maven Central]() and can be included into your project by only adding the library as dependency to your project.\r\n\r\n*Please make sure you're always using the latest version of NetworkUtils*\r\n\r\n#### Dependency\r\n\r\n**Note:** NetworkUtils uses [Semantic Versioning](http://semver.org/) for it's release/snapshot version number naming.\r\n\r\nTo use this library, all you have to do is to include it into your project's `build.gradle` file:\r\n\r\n```gradle\r\ndependencies {\r\n        //other dependencies here...\r\n        compile 'com.pddstudio:networkutils:x.y.z'\r\n\t\t//make sure you're always using the latest version of NetworkUtils\r\n}\r\n```\r\n\r\n## Library Features Overview\r\nDown below you can find a list of all current features the library comes with.\r\n\r\n#### General Overview\r\n\r\n- Simple Network Utilities (like getting the current IP-Address, and more...)\r\n- ARP (Address Resolution Protocol) resolver and IP- / Mac-Address Mapper\r\n- AdBlock detection (based on the phone's `host` file)\r\n- Ping Utilities for checking local/remote address availability using Android's native ping binary\r\n- Port Scanning Utilities for local/remote address scanning and open port detection (yet, supports TCP connections only)\r\n- Discovery Utilities for DNS based service discovery on a local network over Multicast DNS (Avahi, Bonjour, ZeroConf)\r\n\r\n#### NetworkUtils Javadoc\r\n\r\nYou can find the latest version of NetworkUtil's Javadoc [here](http://pddstudio.github.io/NetworkUtils/jdoc/)\r\n\r\n## Installation\r\n\r\n**Adding Permissions to your Application**\r\n\r\nAfter adding the library as dependency to your project, continue by preparing your application and adding the required permissions to your `AndroidManifest.xml`: \r\n\r\n```xml\r\n    <!-- This permission is required to perform network requests -->\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <!-- These permissions are required when using Utilities like retrieving the current IP-Address, ... --> \r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\r\n```\r\n\r\nNow you can start using NetworkUtils in two ways:\r\n\r\n**1. Creating a Singleton instance**\r\n\r\nCreating a Singleton instance allows you to only instantiate the Library once and access it's created instance from everywhere in your code.\r\n\r\nTo create the Singleton instance all you have to do is to call it's `initSingleton(Context context)` method before retrieving an instance. Therefore it's recommended to instantiate the Library in your Application's `onCreate(Bundle savedInstanceState)` method.\r\n\r\n```java\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        //other stuff in your onCreate method...\r\n\r\n        NetworkUtils.initSingleton(this);\r\n    }\r\n```\r\n\r\nNow you can retrieve the `NetworkUtils` Singleton from everywhere in your application's code by calling:\r\n\r\n```java\r\n    private void someNetworkMethod() {\r\n        //retrieve the NetworkUtils Singleton\r\n        NetworkUtils networkUtils = NetworkUtils.get();\r\n        //now you can call any method in the library as usual\r\n        Log.d(\"NetworkUtils\", \"Current IP-Address: \" + networkUtils.getCurrentIpAddress());\r\n    }\r\n```\r\n\r\n**2. Always retrieve a new instance**\r\n\r\nIn case you want to get a new instance of `NetworkUtils` everytime you want to operate with the library you can retrieve it by calling it's `get(Context context, Boolean flag)` method:\r\n```java\r\n    @Override\r\n    protected void onCreate(final Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        //other stuff in your onCreate method...\r\n\r\n        NetworkUtils networkUtils = NetworkUtils.get(this, true);\r\n    }\r\n```\r\n\r\nThat's it! Now you can continue with [synchronous](https://github.com/PDDStudio/NetworkUtils#synchronous-operations) or [asynchronous](https://github.com/PDDStudio/NetworkUtils#asynchronous-operations) requests.\r\n\r\n##Synchronous Operations\r\nSynchronous Operations are supposed to be called only on already existing background jobs, you won't be able to call a synchronous request in your application's UiThread.\r\n\r\n*WIP*\r\n\r\n##Asynchronous Operations\r\nAsynchronous Operations are supposed to be called from your application's UiThread. The Library will execute your request(s) in the background and notify you about changes via the interface you provide. Asynchronous operations do always require a callback as parameter.\r\n\r\n*WIP*\r\n\r\n##ToDo List\r\n\r\n*WIP*\r\n\r\n##About & Contact\r\n\r\n*WIP*\r\n\r\n##License\r\n\r\n*WIP*","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}